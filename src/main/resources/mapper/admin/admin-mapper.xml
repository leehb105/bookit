<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin">
	<insert id="insertAdminReply">
		insert into admin_inquire
		values(seq_admin_inquire_no.nextval, #{inquireNo}, #{adminId}, #{adminName}, #{content}, default, default)
	</insert>
	
	<update id="updateReportUserCondition">
		update report_user set condition = #{condition} where no = #{no}
	</update>
	
	<update id="updateReportBoardCondition">
		update report_board set condition = #{condition} where no = #{no}
	</update>
	
	<select id="selectAllInquire" resultMap="inquireMap">
		select
		    i.*,
		    (select condition from admin_inquire where inquire_no = i.no) condition
		from
		    inquire i
		order by
		    no desc
	</select>
	
	<resultMap type="inquire" id="inquireMap">
		<id column="no" property="no"/>
		<result column="title" property="title"/>
		<result column="category" property="category"/>
		<result column="content" property="content"/>
		<result column="reg_date" property="regDate"/>
		<result column="member_id" property="memberId"/>
		<result column="condition" property="condition"/>
	</resultMap>
	
	<select id="selectTotalInquire" resultType="_int">
		select count(*) from inquire
	</select>
	
	<select id="selectOneInquire" resultType="inquire">
		select * from inquire where no = #{no}
	</select>
	
	<select id="selectOneAdminInquire" resultType="adminInquire">
		select * from admin_inquire where inquire_no = #{no}
	</select>
	
	<select id="selectAllReportUser" resultType="reportUser">
		select * from report_user order by no desc
	</select>
	
	<select id="selectAllReportBoard" resultType="reportBoard">
		select 
		    r.*,
		    b.board_name
		from 
		    report_board r left join board_id b
		    on r.board_id = b.board_id
		order by
			no desc
	</select>
	
	<select id="selectTotalReport" resultType="_int">
		select count(*) from report_user
	</select>
	
	<update id="enableUser">
		update member set enabled = 0 where id = #{reportee}
	</update>
	
	<select id="selectTotalReportBoard" resultType="_int">
		select count(*) from report_board
	</select>
	
	<select id="getTotalMember" resultType="_int">
		select
			count(*)
		from
			member
	</select>
	
	
	<select id="selectAllMembers" resultMap="member">
		select
		    *
		from
		    member m left join authority a
		    on m.id = a.member_id
	</select>
	
	<resultMap type="member" id="member">
		<id column="id" property="id"/>
		<result column="password" property="password"/>
		<result column="email" property="email"/>
		<result column="nickname" property="nickname"/>
		<result column="name" property="name"/>
		<result column="phone" property="phone"/>
		<result column="enabled" property="enabled"/>
		<result column="enroll_date" property="enrollDate"/>
		<result column="report_yn" property="reportYn"/>
		<result column="cash" property="cash"/>
		<result column="profle_image" property="profileImage"/>
		<collection 
			property="authorities" 
			ofType="org.springframework.security.core.authority.SimpleGrantedAuthority">
			
			<constructor>
				<arg column="authority" javaType="string"/>
			</constructor>
		</collection>
	</resultMap>
	
	<update id="communityDeleteYn">
		update community set delete_yn = 'Y' where community_no = #{boardNo}
	</update>
	
	<update id="usedDeleteYn">
		update used_board set delete_yn = 'Y' where used_board_no = #{boardNo}
	</update>
	
	<update id="requestDeleteYn">
		update request_board set delete_yn = 'Y' where request_board_no = #{boardNo}
	</update>
	
	
	<select id="selectAuthority" resultType="_int">
		select
			count(*)
		from
			authority
		where
			member_id = #{userId}
	</select>
	
	<insert id="insertAuthority">
		insert into
			authority
		values('ROLE_USER',#{userId})
	</insert>
	
	<delete id="deleteAuthority">
		delete from
			authority
		where
			member_id = #{userId} and authority = 'ROLE_ADMIN'
	</delete>
	
	<insert id="insertAuthority_ADMIN">
		insert into
			authority
		values('ROLE_ADMIN',#{userId})
	</insert>
	
	<!--====================================== 관리자 통계부분=========================================================================================== -->
		<select id="selectChart" resultMap="chartMap">
		select  
			extract(month from m.enroll_date) as md
			,count(*) 
		from 
			member m 
		where 
			extract(month from m.enroll_date) is not null 
		group by 
			extract(month from m.enroll_date) 
		order by
			extract(month from m.enroll_date) asc
	
	</select>
	
	
	<select id="selectChartDay" resultMap="chartMap">
		select 
			* 
		from 
			(select 
				extract(day from enroll_date) as md,count(*) 
			from 
				member 
			where 
				extract(month from enroll_date) = #{month} 
			group by 
				extract(day from enroll_date))
			order by 
				md asc
	
	</select>
	
	
	
	
	<!-- 북토리 충전 차트 -->
	<select id="selectCashChart" resultMap="cashChartMap">

		select
            extract(month from ch.charge_date) as month,
			round(avg(charge_cash),0) as cash
		from
			charge_history ch
        group by
            extract(month from ch.charge_date)
        order by
            month asc
	
	</select>
	
	
	<resultMap type="chart" id="chartMap">
		<result column="md" property="md"/>
		<result column="COUNT(*)" property="count"/>
	</resultMap>
  
	<resultMap type="chart" id="cashChartMap">
		<result column="month" property="md"/>
		<result column="cash" property="count"/>
	</resultMap>
	
</mapper>

















